Index^Source File^Line Number^Matched Method^MatchedInstruction^Aliases^Classification^Duplicate^Unfixable^Comments
0^org/joda/time/TestDateTimeZone.java^465^org.joda.time.TestDateTimeZone.testProvider()V^118 = new <Application,Ljava/io/ByteArrayOutputStream>@279^NULL^INVOKE,^false^false^Try-catch Fix;
1^org/joda/time/TestDateTimeZone.java^579^org.joda.time.TestDateTimeZone.testNameProvider()V^75 = new <Application,Ljava/io/ByteArrayOutputStream>@179^NULL^INVOKE,^false^false^Try-catch Fix;
2^org/joda/time/TestDateTimeZone.java^982^org.joda.time.TestDateTimeZone.testSerialization1()V^8 = new <Application,Ljava/io/ObjectOutputStream>@14^org.joda.time.TestDateTimeZone.testSerialization1()V#6,^INVOKE,^false^false^Normal Fix;
3^org/joda/time/TestDateTimeZone.java^1000^org.joda.time.TestDateTimeZone.testSerialization2()V^8 = new <Application,Ljava/io/ObjectOutputStream>@15^org.joda.time.TestDateTimeZone.testSerialization2()V#6,^INVOKE,^false^false^Normal Fix;
4^org/joda/time/TestYearMonth_Basics.java^604^org.joda.time.TestYearMonth_Basics.testSerialization()V^10 = new <Application,Ljava/io/ObjectOutputStream>@24^org.joda.time.TestYearMonth_Basics.testSerialization()V#8,^INVOKE,^false^false^Normal Fix;
5^org/joda/time/TestMutablePeriod_Basics.java^164^org.joda.time.TestMutablePeriod_Basics.testSerialization()V^8 = new <Application,Ljava/io/ObjectOutputStream>@19^org.joda.time.TestMutablePeriod_Basics.testSerialization()V#6,^INVOKE,^false^false^Normal Fix;
6^org/joda/time/TestDurationFieldType.java^177^org.joda.time.TestDurationFieldType.doSerialization(Lorg/joda/time/DurationFieldType;)Lorg/joda/time/DurationFieldType;^6 = new <Application,Ljava/io/ObjectOutputStream>@8^org.joda.time.TestDurationFieldType.doSerialization(Lorg/joda/time/DurationFieldType;)Lorg/joda/time/DurationFieldType;#4,^INVOKE,^false^false^Normal Fix;
7^org/joda/time/tz/TestCachedDateTimeZone.java^69^org.joda.time.tz.TestCachedDateTimeZone.testSerialization()V^10 = new <Application,Ljava/io/ObjectOutputStream>@17^org.joda.time.tz.TestCachedDateTimeZone.testSerialization()V#8,^INVOKE,^false^false^Normal Fix;
8^org/joda/time/tz/TestCompiler.java^145^org.joda.time.tz.TestCompiler.createDataFile(Ljava/lang/String;)Ljava/io/File;^15 = new <Application,Ljava/io/FileOutputStream>@35^NULL^INVOKE,^false^false^Normal Fix;
9^org/joda/time/TestLocalDate_Basics.java^1080^org.joda.time.TestLocalDate_Basics.testSerialization()V^11 = new <Application,Ljava/io/ObjectOutputStream>@26^org.joda.time.TestLocalDate_Basics.testSerialization()V#9,^INVOKE,^false^false^Normal Fix;
10^org/joda/time/TestMutableInterval_Basics.java^453^org.joda.time.TestMutableInterval_Basics.testSerialization()V^9 = new <Application,Ljava/io/ObjectOutputStream>@24^org.joda.time.TestMutableInterval_Basics.testSerialization()V#7,^INVOKE,^false^false^Normal Fix;
11^org/joda/time/TestMutableDateTime_Basics.java^392^org.joda.time.TestMutableDateTime_Basics.testSerialization()V^8 = new <Application,Ljava/io/ObjectOutputStream>@20^org.joda.time.TestMutableDateTime_Basics.testSerialization()V#6,^INVOKE,^false^false^Normal Fix;
12^org/joda/time/TestHours.java^210^org.joda.time.TestHours.testSerialization()V^6 = new <Application,Ljava/io/ObjectOutputStream>@12^org.joda.time.TestHours.testSerialization()V#4,^INVOKE,^false^false^Normal Fix;
13^org/joda/time/TestWeeks.java^199^org.joda.time.TestWeeks.testSerialization()V^6 = new <Application,Ljava/io/ObjectOutputStream>@12^org.joda.time.TestWeeks.testSerialization()V#4,^INVOKE,^false^false^Normal Fix;
14^org/joda/time/TestInterval_Basics.java^1028^org.joda.time.TestInterval_Basics.testSerialization()V^10 = new <Application,Ljava/io/ObjectOutputStream>@27^org.joda.time.TestInterval_Basics.testSerialization()V#8,^INVOKE,^false^false^Normal Fix;
15^org/joda/time/TestTimeOfDay_Basics.java^854^org.joda.time.TestTimeOfDay_Basics.testSerialization()V^12 = new <Application,Ljava/io/ObjectOutputStream>@27^org.joda.time.TestTimeOfDay_Basics.testSerialization()V#10,^INVOKE,^false^false^Normal Fix;
16^org/joda/time/field/TestScaledDurationField.java^279^org.joda.time.field.TestScaledDurationField.testSerialization()V^6 = new <Application,Ljava/io/ObjectOutputStream>@13^org.joda.time.field.TestScaledDurationField.testSerialization()V#4,^INVOKE,^false^false^Normal Fix;
17^org/joda/time/field/TestPreciseDurationField.java^262^org.joda.time.field.TestPreciseDurationField.testSerialization()V^6 = new <Application,Ljava/io/ObjectOutputStream>@13^org.joda.time.field.TestPreciseDurationField.testSerialization()V#4,^INVOKE,^false^false^Normal Fix;
18^org/joda/time/field/TestMillisDurationField.java^203^org.joda.time.field.TestMillisDurationField.testSerialization()V^6 = new <Application,Ljava/io/ObjectOutputStream>@12^org.joda.time.field.TestMillisDurationField.testSerialization()V#4,^INVOKE,^false^false^Normal Fix;
19^org/joda/time/TestPeriod_Basics.java^230^org.joda.time.TestPeriod_Basics.testSerialization()V^8 = new <Application,Ljava/io/ObjectOutputStream>@19^org.joda.time.TestPeriod_Basics.testSerialization()V#6,^INVOKE,^false^false^Normal Fix;
20^org/joda/time/TestMinutes.java^200^org.joda.time.TestMinutes.testSerialization()V^6 = new <Application,Ljava/io/ObjectOutputStream>@12^org.joda.time.TestMinutes.testSerialization()V#4,^INVOKE,^false^false^Normal Fix;
21^org/joda/time/TestYearMonthDay_Basics.java^780^org.joda.time.TestYearMonthDay_Basics.testSerialization()V^11 = new <Application,Ljava/io/ObjectOutputStream>@26^org.joda.time.TestYearMonthDay_Basics.testSerialization()V#9,^INVOKE,^false^false^Normal Fix;
22^org/joda/time/TestDateMidnight_Basics.java^423^org.joda.time.TestDateMidnight_Basics.testSerialization()V^8 = new <Application,Ljava/io/ObjectOutputStream>@20^org.joda.time.TestDateMidnight_Basics.testSerialization()V#6,^INVOKE,^false^false^Normal Fix;
23^org/joda/time/TestPeriodType.java^111^org.joda.time.TestPeriodType.assertEqualsAfterSerialization(Lorg/joda/time/PeriodType;)V^6 = new <Application,Ljava/io/ObjectOutputStream>@8^org.joda.time.TestPeriodType.assertEqualsAfterSerialization(Lorg/joda/time/PeriodType;)V#4,^INVOKE,^false^false^Normal Fix;
24^org/joda/time/TestPeriodType.java^126^org.joda.time.TestPeriodType.assertSameAfterSerialization(Lorg/joda/time/PeriodType;)V^6 = new <Application,Ljava/io/ObjectOutputStream>@8^org.joda.time.TestPeriodType.assertSameAfterSerialization(Lorg/joda/time/PeriodType;)V#4,^INVOKE,^false^false^Normal Fix;
25^org/joda/time/TestMonths.java^227^org.joda.time.TestMonths.testSerialization()V^6 = new <Application,Ljava/io/ObjectOutputStream>@12^org.joda.time.TestMonths.testSerialization()V#4,^INVOKE,^false^false^Normal Fix;
26^org/joda/time/TestDateTime_Basics.java^488^org.joda.time.TestDateTime_Basics.testSerialization()V^8 = new <Application,Ljava/io/ObjectOutputStream>@20^org.joda.time.TestDateTime_Basics.testSerialization()V#6,^INVOKE,^false^false^Normal Fix;
27^org/joda/time/TestMonthDay_Basics.java^693^org.joda.time.TestMonthDay_Basics.testSerialization()V^10 = new <Application,Ljava/io/ObjectOutputStream>@22^org.joda.time.TestMonthDay_Basics.testSerialization()V#8,^INVOKE,^false^false^Normal Fix;
28^org/joda/time/TestDateTimeFieldType.java^315^org.joda.time.TestDateTimeFieldType.doSerialization(Lorg/joda/time/DateTimeFieldType;)Lorg/joda/time/DateTimeFieldType;^6 = new <Application,Ljava/io/ObjectOutputStream>@8^org.joda.time.TestDateTimeFieldType.doSerialization(Lorg/joda/time/DateTimeFieldType;)Lorg/joda/time/DateTimeFieldType;#4,^INVOKE,^false^false^Normal Fix;
29^org/joda/time/TestLocalTime_Basics.java^767^org.joda.time.TestLocalTime_Basics.testSerialization()V^12 = new <Application,Ljava/io/ObjectOutputStream>@27^org.joda.time.TestLocalTime_Basics.testSerialization()V#10,^INVOKE,^false^false^Normal Fix;
30^org/joda/time/TestPartial_Basics.java^749^org.joda.time.TestPartial_Basics.testSerialization()V^8 = new <Application,Ljava/io/ObjectOutputStream>@16^org.joda.time.TestPartial_Basics.testSerialization()V#6,^INVOKE,^false^false^Normal Fix;
31^org/joda/time/TestDays.java^241^org.joda.time.TestDays.testSerialization()V^6 = new <Application,Ljava/io/ObjectOutputStream>@12^org.joda.time.TestDays.testSerialization()V#4,^INVOKE,^false^false^Normal Fix;
32^org/joda/time/TestInstant_Basics.java^368^org.joda.time.TestInstant_Basics.testSerialization()V^8 = new <Application,Ljava/io/ObjectOutputStream>@20^org.joda.time.TestInstant_Basics.testSerialization()V#6,^INVOKE,^false^false^Normal Fix;
33^org/joda/time/TestLocalDateTime_Basics.java^1028^org.joda.time.TestLocalDateTime_Basics.testSerialization()V^15 = new <Application,Ljava/io/ObjectOutputStream>@34^org.joda.time.TestLocalDateTime_Basics.testSerialization()V#13,^INVOKE,^false^false^Normal Fix;
34^org/joda/time/TestYears.java^182^org.joda.time.TestYears.testSerialization()V^6 = new <Application,Ljava/io/ObjectOutputStream>@12^org.joda.time.TestYears.testSerialization()V#4,^INVOKE,^false^false^Normal Fix;
35^org/joda/time/TestDateTimeComparator.java^272^org.joda.time.TestDateTimeComparator.testSerialization1()V^16 = new <Application,Ljava/io/ObjectOutputStream>@30^org.joda.time.TestDateTimeComparator.testSerialization1()V#14,^INVOKE,^false^false^Normal Fix;
36^org/joda/time/TestDateTimeComparator.java^290^org.joda.time.TestDateTimeComparator.testSerialization2()V^7 = new <Application,Ljava/io/ObjectOutputStream>@12^org.joda.time.TestDateTimeComparator.testSerialization2()V#5,^INVOKE,^false^false^Normal Fix;
37^org/joda/time/TestDuration_Basics.java^238^org.joda.time.TestDuration_Basics.testSerialization()V^8 = new <Application,Ljava/io/ObjectOutputStream>@19^org.joda.time.TestDuration_Basics.testSerialization()V#6,^INVOKE,^false^false^Normal Fix;
38^org/joda/time/TestSerialization.java^293^org.joda.time.TestSerialization.loadAndCompare(Ljava/io/Serializable;Ljava/lang/String;Z)V^6 = new <Application,Ljava/io/FileInputStream>@0^org.joda.time.TestSerialization.loadAndCompare(Ljava/io/Serializable;Ljava/lang/String;Z)V#20,^INVOKE,^false^false^Normal Fix;
39^org/joda/time/TestSerialization.java^294^org.joda.time.TestSerialization.loadAndCompare(Ljava/io/Serializable;Ljava/lang/String;Z)V^20 = new <Application,Ljava/io/ObjectInputStream>@33^org.joda.time.TestSerialization.loadAndCompare(Ljava/io/Serializable;Ljava/lang/String;Z)V#6,^INVOKE,^true^false^Normal Fix;
40^org/joda/time/TestSerialization.java^319^org.joda.time.TestSerialization.inlineCompare(Ljava/io/Serializable;Z)V^7 = new <Application,Ljava/io/ObjectOutputStream>@8^org.joda.time.TestSerialization.inlineCompare(Ljava/io/Serializable;Z)V#5,^INVOKE,^false^false^Normal Fix;
41^org/joda/time/TestSerialization.java^324^org.joda.time.TestSerialization.inlineCompare(Ljava/io/Serializable;Z)V^15 = new <Application,Ljava/io/ObjectInputStream>@42^org.joda.time.TestSerialization.inlineCompare(Ljava/io/Serializable;Z)V#11,^INVOKE,^false^false^Normal Fix;
42^org/joda/time/TestSeconds.java^197^org.joda.time.TestSeconds.testSerialization()V^6 = new <Application,Ljava/io/ObjectOutputStream>@12^org.joda.time.TestSeconds.testSerialization()V#4,^INVOKE,^false^false^Normal Fix;
43^org/joda/time/format/TestPeriodFormatter.java^121^org.joda.time.format.TestPeriodFormatter.testPrint_writerMethods()V^13 = new <Application,Ljava/io/CharArrayWriter>@19^NULL^INVOKE,^false^false^Normal Fix;
44^org/joda/time/format/TestPeriodFormatter.java^125^org.joda.time.format.TestPeriodFormatter.testPrint_writerMethods()V^21 = new <Application,Ljava/io/CharArrayWriter>@45^NULL^INVOKE,^false^false^Try-catch Fix;
45^org/joda/time/format/TestDateTimeFormatter.java^184^org.joda.time.format.TestDateTimeFormatter.testPrint_writerMethods()V^13 = new <Application,Ljava/io/CharArrayWriter>@26^NULL^INVOKE,^false^false^Normal Fix;
46^org/joda/time/format/TestDateTimeFormatter.java^188^org.joda.time.format.TestDateTimeFormatter.testPrint_writerMethods()V^21 = new <Application,Ljava/io/CharArrayWriter>@52^NULL^INVOKE,^false^false^Normal Fix;
47^org/joda/time/format/TestDateTimeFormatter.java^192^org.joda.time.format.TestDateTimeFormatter.testPrint_writerMethods()V^31 = new <Application,Ljava/io/CharArrayWriter>@81^NULL^INVOKE,^false^false^Normal Fix;
48^org/joda/time/format/TestDateTimeFormatter.java^196^org.joda.time.format.TestDateTimeFormatter.testPrint_writerMethods()V^42 = new <Application,Ljava/io/CharArrayWriter>@109^NULL^INVOKE,^false^false^Try-catch Fix;
