Index^Source File^Line Number^Matched Method^MatchedInstruction^Aliases^Classification^Duplicate^Unfixable^Comments
0^test/github/lindenb/dataindexer/SimpleInteger.java^66^test.github.lindenb.dataindexer.SimpleInteger.test()V^33 = new <Application,Lcom/github/lindenb/dataindexer/PrimaryDataIndexWriter>@107^NULL^FIELD,INVOKE,^false^true^Field escape;
1^test/github/lindenb/dataindexer/SimpleInteger.java^67^test.github.lindenb.dataindexer.SimpleInteger.test()V^35 = new <Application,Lcom/github/lindenb/dataindexer/SecondaryDataWriter>@117^NULL^FIELD,INVOKE,^false^true^Field escape;
2^test/github/lindenb/dataindexer/SimpleInteger.java^81^test.github.lindenb.dataindexer.SimpleInteger.test()V^54 = new <Application,Lcom/github/lindenb/dataindexer/PrimaryDatabaseReader>@191^NULL^FIELD,INVOKE,ARRAY,^false^true^Field escape;
3^test/github/lindenb/dataindexer/SimpleInteger.java^82^test.github.lindenb.dataindexer.SimpleInteger.test()V^56 = new <Application,Lcom/github/lindenb/dataindexer/SecondaryDatabaseReader>@201^NULL^FIELD,INVOKE,^false^true^Field escape;
4^test/github/lindenb/dataindexer/dbsnp/DBSnpLoader.java^116^test.github.lindenb.dataindexer.dbsnp.DBSnpLoader.opendbSnp137()Ljava/io/BufferedReader;^13 = new <Application,Ljava/io/FileInputStream>@12^test.github.lindenb.dataindexer.dbsnp.DBSnpLoader.opendbSnp137()Ljava/io/BufferedReader;#16,test.github.lindenb.dataindexer.dbsnp.DBSnpLoader.opendbSnp137()Ljava/io/BufferedReader;#12,^INVOKE,^false^true^Could not figure out finally block location;Normal Fix;
5^test/github/lindenb/dataindexer/dbsnp/DBSnpLoader.java^120^test.github.lindenb.dataindexer.dbsnp.DBSnpLoader.opendbSnp137()Ljava/io/BufferedReader;^12 = invokevirtual < Application, Ljava/net/URL, openStream()Ljava/io/InputStream; > 8 @36 exception:11^test.github.lindenb.dataindexer.dbsnp.DBSnpLoader.opendbSnp137()Ljava/io/BufferedReader;#16,test.github.lindenb.dataindexer.dbsnp.DBSnpLoader.opendbSnp137()Ljava/io/BufferedReader;#13,^INVOKE,^true^true^Could not figure out finally block location;Normal Fix;
6^test/github/lindenb/dataindexer/dbsnp/DBSnpLoader.java^135^test.github.lindenb.dataindexer.dbsnp.DBSnpLoader.test()V^19 = new <Application,Lcom/github/lindenb/dataindexer/PrimaryDataIndexWriter>@55^NULL^FIELD,INVOKE,^false^true^Field escape;
7^test/github/lindenb/dataindexer/dbsnp/DBSnpLoader.java^167^test.github.lindenb.dataindexer.dbsnp.DBSnpLoader.test()V^36 = new <Application,Lcom/github/lindenb/dataindexer/SecondaryDataWriter>@126^NULL^^false^false^Normal Fix;
8^test/github/lindenb/dataindexer/dbsnp/DBSnpLoader.java^171^test.github.lindenb.dataindexer.dbsnp.DBSnpLoader.test()V^40 = invokespecial < Application, Ltest/github/lindenb/dataindexer/dbsnp/DBSnpLoader, opendbSnp137()Ljava/io/BufferedReader; > 1 @142 exception:39^NULL^INVOKE,^false^false^Normal Fix;
9^test/github/lindenb/dataindexer/dbsnp/DBSnpLoader.java^191^test.github.lindenb.dataindexer.dbsnp.DBSnpLoader.test()V^99 = new <Application,Lcom/github/lindenb/dataindexer/PrimaryDatabaseReader>@336^NULL^FIELD,INVOKE,^false^true^Field escape;
10^test/github/lindenb/dataindexer/dbsnp/DBSnpLoader.java^201^test.github.lindenb.dataindexer.dbsnp.DBSnpLoader.test()V^121 = new <Application,Lcom/github/lindenb/dataindexer/SecondaryDatabaseReader>@423^NULL^FIELD,INVOKE,ARRAY,^false^true^Field escape;
11^com/github/lindenb/dataindexer/AbstractDatabaseReader.java^57^com.github.lindenb.dataindexer.AbstractDatabaseReader.open()V^7 = new <Application,Ljava/io/DataInputStream>@12^com.github.lindenb.dataindexer.AbstractDatabaseReader.open()V#8,^INVOKE,^false^false^Normal Fix;
12^com/github/lindenb/dataindexer/AbstractDatabaseReader.java^65^com.github.lindenb.dataindexer.AbstractDatabaseReader.open()V^24 = new <Application,Ljava/io/RandomAccessFile>@76^NULL^FIELD,^false^true^Field escape;
13^com/github/lindenb/dataindexer/AbstractDatabaseReader.java^68^com.github.lindenb.dataindexer.AbstractDatabaseReader.open()V^40 = invokeinterface < Application, Lcom/github/lindenb/dataindexer/RandomAccessFactory, openForReading(Ljava/io/File;)Lcom/github/lindenb/dataindexer/RandomAccessInput; > 34,38 @110 exception:39^NULL^FIELD,^false^true^Field escape;
14^com/github/lindenb/dataindexer/PrimaryDataIndexWriter.java^42^com.github.lindenb.dataindexer.PrimaryDataIndexWriter.ensureOpen()V^12 = new <Application,Ljava/io/RandomAccessFile>@25^NULL^FIELD,^false^true^Field escape;
15^com/github/lindenb/dataindexer/PrimaryDataIndexWriter.java^43^com.github.lindenb.dataindexer.PrimaryDataIndexWriter.ensureOpen()V^32 = invokeinterface < Application, Lcom/github/lindenb/dataindexer/RandomAccessFactory, openForWriting(Ljava/io/File;)Lcom/github/lindenb/dataindexer/RandomAccessOutput; > 25,30 @75 exception:31^NULL^FIELD,INVOKE,^false^true^Field escape;
16^com/github/lindenb/dataindexer/AbstractDataIndexer.java^59^com.github.lindenb.dataindexer.AbstractDataIndexer.writeSummary()V^3 = new <Application,Ljava/io/DataOutputStream>@0^com.github.lindenb.dataindexer.AbstractDataIndexer.writeSummary()V#4,^INVOKE,^false^false^Normal Fix;
17^com/github/lindenb/dataindexer/SecondaryDataWriter.java^50^com.github.lindenb.dataindexer.SecondaryDataWriter.ensureOpen()V^7 = new <Application,Ljava/io/FileOutputStream>@15^com.github.lindenb.dataindexer.SecondaryDataWriter.ensureOpen()V#10,^FIELD,^false^true^Field escape;
18^com/github/lindenb/dataindexer/SecondaryDataWriter.java^243^com.github.lindenb.dataindexer.SecondaryDataWriter.externalSort()V^161 = invokeinterface < Application, Lcom/github/lindenb/dataindexer/RandomAccessFactory, openForWriting(Ljava/io/File;)Lcom/github/lindenb/dataindexer/RandomAccessOutput; > 154,159 @625 exception:160^com.github.lindenb.dataindexer.SecondaryDataWriter.externalSort()V#189,^FIELD,INVOKE,^false^true^Field escape;
19^com/github/lindenb/dataindexer/SecondaryDataWriter.java^249^com.github.lindenb.dataindexer.SecondaryDataWriter.externalSort()V^167 = new <Application,Ljava/io/RandomAccessFile>@647^com.github.lindenb.dataindexer.SecondaryDataWriter.externalSort()V#175,^INVOKE,^false^true^Could not figure out finally block location;Normal Fix;
20^com/github/lindenb/dataindexer/DefaultRandomAccessOutput.java^18^com.github.lindenb.dataindexer.DefaultRandomAccessOutput.<init>(Ljava/io/File;)V^6 = new <Application,Ljava/io/FileOutputStream>@10^NULL^FIELD,^false^true^Field escape;
21^com/github/lindenb/dataindexer/DefaultRandomAccessOutput.java^31^com.github.lindenb.dataindexer.DefaultRandomAccessOutput.write([BII)V^7 = invokevirtual < Application, Lcom/github/lindenb/dataindexer/DefaultRandomAccessOutput, getDelegate()Ljava/io/OutputStream; > 1 @1 exception:6^NULL^FIELD,INVOKE,^false^true^Field escape;
22^com/github/lindenb/dataindexer/DefaultRandomAccessOutput.java^57^com.github.lindenb.dataindexer.DefaultRandomAccessOutput.flush()V^4 = invokevirtual < Application, Lcom/github/lindenb/dataindexer/DefaultRandomAccessOutput, getDelegate()Ljava/io/OutputStream; > 1 @1 exception:3^NULL^FIELD,INVOKE,^false^true^Field escape;
23^com/github/lindenb/dataindexer/DefaultRandomAccessInput.java^18^com.github.lindenb.dataindexer.DefaultRandomAccessInput.<init>(Ljava/io/File;)V^5 = new <Application,Ljava/io/RandomAccessFile>@5^NULL^FIELD,^false^true^Field escape;
24^com/github/lindenb/dataindexer/DefaultRandomAccessInput.java^28^com.github.lindenb.dataindexer.DefaultRandomAccessInput.seek(J)V^5 = invokevirtual < Application, Lcom/github/lindenb/dataindexer/DefaultRandomAccessInput, getDelegate()Ljava/io/RandomAccessFile; > 1 @1 exception:4^NULL^FIELD,INVOKE,^false^true^Field escape;
25^com/github/lindenb/dataindexer/DefaultRandomAccessInput.java^34^com.github.lindenb.dataindexer.DefaultRandomAccessInput.read()I^4 = invokevirtual < Application, Lcom/github/lindenb/dataindexer/DefaultRandomAccessInput, getDelegate()Ljava/io/RandomAccessFile; > 1 @1 exception:3^NULL^FIELD,INVOKE,^false^true^Field escape;
26^com/github/lindenb/dataindexer/DefaultRandomAccessInput.java^39^com.github.lindenb.dataindexer.DefaultRandomAccessInput.read([BII)I^7 = invokevirtual < Application, Lcom/github/lindenb/dataindexer/DefaultRandomAccessInput, getDelegate()Ljava/io/RandomAccessFile; > 1 @1 exception:6^NULL^FIELD,INVOKE,^false^true^Field escape;
27^com/github/lindenb/dataindexer/DefaultRandomAccessInput.java^43^com.github.lindenb.dataindexer.DefaultRandomAccessInput.read([B)I^5 = invokevirtual < Application, Lcom/github/lindenb/dataindexer/DefaultRandomAccessInput, getDelegate()Ljava/io/RandomAccessFile; > 1 @1 exception:4^NULL^FIELD,INVOKE,^false^true^Field escape;
28^com/github/lindenb/dataindexer/PrimaryDataIndexWriter.java^67^UNMATCHED^UNMATCHED^NULL^NULL^NULL^true^NULL
29^com/github/lindenb/dataindexer/SecondaryDataWriter.java^95^UNMATCHED^UNMATCHED^NULL^NULL^NULL^true^NULL
30^com/github/lindenb/dataindexer/SecondaryDataWriter.java^99^UNMATCHED^UNMATCHED^NULL^NULL^NULL^true^NULL
31^com/github/lindenb/dataindexer/SecondaryDatabaseReader.java^210^UNMATCHED^UNMATCHED^NULL^NULL^NULL^true^NULL
32^com/github/lindenb/dataindexer/SecondaryDatabaseReader.java^226^UNMATCHED^UNMATCHED^NULL^NULL^NULL^true^NULL
33^com/github/lindenb/dataindexer/SecondaryDatabaseReader.java^293^UNMATCHED^UNMATCHED^NULL^NULL^NULL^true^NULL
34^com/github/lindenb/dataindexer/SecondaryDatabaseReader.java^313^UNMATCHED^UNMATCHED^NULL^NULL^NULL^true^NULL
