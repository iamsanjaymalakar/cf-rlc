Index^Source File^Line Number^Matched Method^MatchedInstruction^Aliases^Classification^Duplicate^Unfixable^Comments
0^gnuplot/Grapher.java^52^gnuplot.Grapher.writeGenData(IIDD[D)V^23 = new <Application,Ljava/io/PrintWriter>@45^gnuplot.Grapher.writeGenData(IIDD[D)V#24,^INVOKE,^false^false^Normal Fix;
1^gnuplot/Grapher.java^57^gnuplot.Grapher.writeGenData(IIDD[D)V^47 = new <Application,Ljava/io/PrintWriter>@115^gnuplot.Grapher.writeGenData(IIDD[D)V#48,^INVOKE,^false^false^Normal Fix;
2^gnuplot/Grapher.java^71^gnuplot.Grapher.transformData(ID)V^13 = new <Application,Ljava/io/BufferedReader>@20^gnuplot.Grapher.transformData(ID)V#14,^INVOKE,^false^false^Normal Fix;
3^gnuplot/Grapher.java^72^gnuplot.Grapher.transformData(ID)V^26 = new <Application,Ljava/io/PrintWriter>@55^gnuplot.Grapher.transformData(ID)V#27,^INVOKE,^false^false^Normal Fix;
4^gnuplot/Grapher.java^90^gnuplot.Grapher.transformData(ID)V^93 = new <Application,Ljava/io/BufferedReader>@252^gnuplot.Grapher.transformData(ID)V#94,^INVOKE,^false^false^Normal Fix;
5^gnuplot/Grapher.java^91^gnuplot.Grapher.transformData(ID)V^106 = new <Application,Ljava/io/PrintWriter>@287^gnuplot.Grapher.transformData(ID)V#107,^INVOKE,^false^false^Normal Fix;
6^fr/inria/optimization/cmaes/CMAEvolutionStrategy.java^808^fr.inria.optimization.cmaes.CMAEvolutionStrategy.readProperties(Ljava/lang/String;)Ljava/util/Properties;^4 = new <Application,Ljava/io/FileInputStream>@5^NULL^INVOKE,ARRAY,^false^true^Array (or collection/map) escape;
7^ssamot/utilities/Configuration.java^50^ssamot.utilities.Configuration.<init>()V^5 = new <Application,Ljava/io/FileInputStream>@9^NULL^ARRAY,^false^true^Array (or collection/map) escape;
8^ssamot/utilities/SerialClone.java^47^ssamot.utilities.SerialClone.cloneX(Ljava/lang/Object;)Ljava/lang/Object;^5 = new <Application,Lssamot/utilities/SerialClone$CloneOutput>@8^ssamot.utilities.SerialClone.cloneX(Ljava/lang/Object;)Ljava/lang/Object;#3,^INVOKE,FIELD,^false^true^Field escape;
9^ssamot/utilities/SerialClone.java^52^ssamot.utilities.SerialClone.cloneX(Ljava/lang/Object;)Ljava/lang/Object;^12 = new <Application,Lssamot/utilities/SerialClone$CloneInput>@37^ssamot.utilities.SerialClone.cloneX(Ljava/lang/Object;)Ljava/lang/Object;#10,^INVOKE,^false^false^Normal Fix;
10^ssamot/config/GameConfig.java^57^ssamot.config.GameConfig.getInstance()Lssamot/config/GameConfig;^33 = new <Application,Ljava/io/FileInputStream>@85^ssamot.config.GameConfig.getInstance()Lssamot/config/GameConfig;#50,^ARRAY,^false^true^Array (or collection/map) escape;
11^main/ConvertToReadable.java^25^main.ConvertToReadable.main([Ljava/lang/String;)V^14 = new <Application,Ljava/io/BufferedReader>@30^main.ConvertToReadable.main([Ljava/lang/String;)V#15,^INVOKE,^false^false^Loop Fix;Normal Fix;
12^main/ConvertToReadable.java^26^main.ConvertToReadable.main([Ljava/lang/String;)V^27 = new <Application,Ljava/io/PrintWriter>@66^main.ConvertToReadable.main([Ljava/lang/String;)V#28,^INVOKE,^false^false^Loop Fix;Normal Fix;
13^main/ConvertToReadable.java^32^main.ConvertToReadable.main([Ljava/lang/String;)V^47 = new <Application,Ljava/util/Scanner>@129^NULL^INVOKE,^false^false^Loop Fix;Normal Fix;
