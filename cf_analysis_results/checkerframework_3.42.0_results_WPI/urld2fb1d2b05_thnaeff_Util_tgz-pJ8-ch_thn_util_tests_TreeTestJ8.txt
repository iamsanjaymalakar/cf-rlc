../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/file/SingleInstanceLock.java:69: error: (required.method.not.called) $$ 4 $$ method close $$ field randomAccessFile $$ java.io.RandomAccessFile $$ Postconditions written on MustCall methods are missing: @EnsuresCalledMethods(value = "randomAccessFile", methods = "close"), @EnsuresCalledMethodsOnException(value = "randomAccessFile", methods = "close") $$ ( 2759, 2815 ) $$ @MustCall method close may not have been invoked on field randomAccessFile or any of its aliases.
	private static RandomAccessFile randomAccessFile = null;
	                                ^
  The type of object is: java.io.RandomAccessFile.
  Reason for going out of scope: Postconditions written on MustCall methods are missing: @EnsuresCalledMethods(value = "randomAccessFile", methods = "close"), @EnsuresCalledMethodsOnException(value = "randomAccessFile", methods = "close")
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/file/SingleInstanceLock.java:70: error: (required.method.not.called) $$ 4 $$ method close $$ field fileChannel $$ java.nio.channels.FileChannel $$ Postconditions written on MustCall methods are missing: @EnsuresCalledMethods(value = "fileChannel", methods = "close"), @EnsuresCalledMethodsOnException(value = "fileChannel", methods = "close") $$ ( 2817, 2863 ) $$ @MustCall method close may not have been invoked on field fileChannel or any of its aliases.
	private static FileChannel fileChannel = null;
	                           ^
  The type of object is: java.nio.channels.FileChannel.
  Reason for going out of scope: Postconditions written on MustCall methods are missing: @EnsuresCalledMethods(value = "fileChannel", methods = "close"), @EnsuresCalledMethodsOnException(value = "fileChannel", methods = "close")
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/file/SingleInstanceLock.java:137: error: (missing.creates.mustcall.for) $$ 3 $$ lock $$ ch.thn.util.file.SingleInstanceLock $$ fileChannel $$ ( 5134, 6920 ) $$ Method lock re-assigns the non-final, owning field ch.thn.util.file.SingleInstanceLock.fileChannel, but does not have a corresponding @CreatesMustCallFor annotation.
	public static boolean lock() throws SingleInstanceLockError {
	                      ^
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/file/SingleInstanceLock.java:137: error: (missing.creates.mustcall.for) $$ 3 $$ lock $$ ch.thn.util.file.SingleInstanceLock $$ randomAccessFile $$ ( 5134, 6920 ) $$ Method lock re-assigns the non-final, owning field ch.thn.util.file.SingleInstanceLock.randomAccessFile, but does not have a corresponding @CreatesMustCallFor annotation.
	public static boolean lock() throws SingleInstanceLockError {
	                      ^
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/file/SingleInstanceLock.java:151: error: (required.method.not.called) $$ 4 $$ method close $$ field randomAccessFile $$ java.io.RandomAccessFile $$  Non-final owning field might be overwritten $$ ( 5490, 5541 ) $$ @MustCall method close may not have been invoked on field randomAccessFile or any of its aliases.
				randomAccessFile = new RandomAccessFile(file, "rw");
				                 ^
  The type of object is: java.io.RandomAccessFile.
  Reason for going out of scope:  Non-final owning field might be overwritten
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/file/SingleInstanceLock.java:152: error: (required.method.not.called) $$ 4 $$ method close $$ field fileChannel $$ java.nio.channels.FileChannel $$  Non-final owning field might be overwritten $$ ( 5547, 5590 ) $$ @MustCall method close may not have been invoked on field fileChannel or any of its aliases.
				fileChannel = randomAccessFile.getChannel();
				            ^
  The type of object is: java.nio.channels.FileChannel.
  Reason for going out of scope:  Non-final owning field might be overwritten
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/file/SingleInstanceLock.java:164: error: (flowexpr.parse.error.postcondition) $$ 2 $$ release(boolean) $$ Invalid 'this' because "this" isn't allowed here $$ ( 6013, 6026 ) $$ error parsing the postcondition expression for release(boolean)
				release(true);
				       ^
  cannot parse the expression Invalid 'this' because "this" isn't allowed here
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/file/SingleInstanceLock.java:174: error: (flowexpr.parse.error.postcondition) $$ 2 $$ release(boolean) $$ Invalid 'this' because "this" isn't allowed here $$ ( 6243, 6257 ) $$ error parsing the postcondition expression for release(boolean)
				release(false);
				       ^
  cannot parse the expression Invalid 'this' because "this" isn't allowed here
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/file/SingleInstanceLock.java:177: error: (flowexpr.parse.error.postcondition) $$ 2 $$ release(boolean) $$ Invalid 'this' because "this" isn't allowed here $$ ( 6376, 6390 ) $$ error parsing the postcondition expression for release(boolean)
				release(false);
				       ^
  cannot parse the expression Invalid 'this' because "this" isn't allowed here
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/file/SingleInstanceLock.java:180: error: (flowexpr.parse.error.postcondition) $$ 2 $$ release(boolean) $$ Invalid 'this' because "this" isn't allowed here $$ ( 6507, 6521 ) $$ error parsing the postcondition expression for release(boolean)
				release(false);
				       ^
  cannot parse the expression Invalid 'this' because "this" isn't allowed here
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/file/SingleInstanceLock.java:187: error: (flowexpr.parse.error.postcondition) $$ 2 $$ release(boolean) $$ Invalid 'this' because "this" isn't allowed here $$ ( 6660, 6674 ) $$ error parsing the postcondition expression for release(boolean)
				release(false);
				       ^
  cannot parse the expression Invalid 'this' because "this" isn't allowed here
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/file/SingleInstanceLock.java:215: error: (flowexpr.parse.error) $$ 1 $$ 'this.fileChannel' in the postcondition EnsuresCalledMethods on the declaration of method 'release': Invalid 'this' because "this" isn't allowed here $$ ( 6988, 7586 ) $$ cannot parse the expression 'this.fileChannel' in the postcondition EnsuresCalledMethods on the declaration of method 'release': Invalid 'this' because "this" isn't allowed here
	public static void release(boolean deleteFile) {
	                   ^
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/file/SingleInstanceLock.java:215: error: (flowexpr.parse.error) $$ 1 $$ 'this.randomAccessFile' in the postcondition EnsuresCalledMethods on the declaration of method 'release': Invalid 'this' because "this" isn't allowed here $$ ( 6988, 7586 ) $$ cannot parse the expression 'this.randomAccessFile' in the postcondition EnsuresCalledMethods on the declaration of method 'release': Invalid 'this' because "this" isn't allowed here
	public static void release(boolean deleteFile) {
	                   ^
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/file/SingleInstanceLock.java:276: error: (flowexpr.parse.error.postcondition) $$ 2 $$ release(boolean) $$ Invalid 'this' because "this" isn't allowed here $$ ( 8043, 8056 ) $$ error parsing the postcondition expression for release(boolean)
			release(true);
			       ^
  cannot parse the expression Invalid 'this' because "this" isn't allowed here
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/tree/core/AbstractGenericListTreeNode.java:55: error: (override.return) $$ 6 $$ N extends @PolyMustCall AbstractGenericListTreeNode<V extends @MustCall Object, N> $$ N extends @MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N> $$ @MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N extends @MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N extends @MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N>>> $$ N extends @PolyMustCall AbstractGenericListTreeNode<V extends @MustCall Object, N> addChildNodeAt(@MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N extends @MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N>> this, @MustCall int p0, N extends @PolyMustCall AbstractGenericListTreeNode<V extends @MustCall Object, N> p1) $$ @MustCall ListTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N>> $$ N extends @MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N> addChildNodeAt(@MustCall ListTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N>> this, @MustCall int p0, N extends @MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N> p1) $$ ( 1390, 1391 ) $$ Incompatible return type.
	public N addChildNodeAt(int index, N node) {
	       ^
  found   : N extends @PolyMustCall AbstractGenericListTreeNode<V extends @MustCall Object, N>
  required: N extends @MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N>
  Consequence: method in @MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N extends @MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N extends @MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N>>>
    N extends @PolyMustCall AbstractGenericListTreeNode<V extends @MustCall Object, N> addChildNodeAt(@MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N extends @MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N>> this, @MustCall int p0, N extends @PolyMustCall AbstractGenericListTreeNode<V extends @MustCall Object, N> p1)
  cannot override method in @MustCall ListTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N>>
    N extends @MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N> addChildNodeAt(@MustCall ListTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N>> this, @MustCall int p0, N extends @MustCall AbstractGenericListTreeNode<V extends @MustCall Object, N> p1)
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/tree/core/AbstractGenericCollectionTreeNode.java:171: error: (override.return) $$ 6 $$ N extends @PolyMustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> $$ N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> $$ @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>, C extends @MustCall Collection<N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C>>>, C extends @MustCall Collection<N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>>> $$ N extends @PolyMustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> addChildNode(@MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>, C extends @MustCall Collection<N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C>>> this, N extends @PolyMustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> p0) $$ @MustCall CollectionTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>> $$ N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> addChildNode(@MustCall CollectionTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>> this, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> p0) $$ ( 3968, 3969 ) $$ Incompatible return type.
	public N addChildNode(N node) {
	       ^
  found   : N extends @PolyMustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>
  required: N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>
  Consequence: method in @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>, C extends @MustCall Collection<N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C>>>, C extends @MustCall Collection<N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>>>
    N extends @PolyMustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> addChildNode(@MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>, C extends @MustCall Collection<N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C>>> this, N extends @PolyMustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> p0)
  cannot override method in @MustCall CollectionTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>>
    N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> addChildNode(@MustCall CollectionTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>> this, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> p0)
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/tree/core/AbstractGenericCollectionTreeNode.java:182: error: (mustcallalias.out.of.scope) $$ 1 $$ regular method exit $$ ( 4140, 4146 ) $$ This @MustCallAlias parameter might go out of scope without being assigned into an owning field of this object (if this is a constructor) or returned.
	protected N internalAddChildNode(N node, boolean notify) {
	                                   ^
  Reason for going out of scope: regular method exit
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/tree/core/AbstractGenericCollectionTreeNode.java:192: error: (argument) $$ 4 $$ added $$ AbstractGenericCollectionTreeNode.fireNodeAdded $$ N extends @PolyMustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> $$ N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> $$ ( 4441, 4445 ) $$ incompatible argument for parameter added of AbstractGenericCollectionTreeNode.fireNodeAdded.
				fireNodeAdded(node);
				              ^
  found   : N extends @PolyMustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>
  required: N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/tree/core/AbstractGenericCollectionTreeNode.java:342: error: (override.return) $$ 6 $$ N extends @PolyMustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> $$ N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> $$ @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>, C extends @MustCall Collection<N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C>>>, C extends @MustCall Collection<N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>>> $$ N extends @PolyMustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> replaceNode(@MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>, C extends @MustCall Collection<N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C>>> this, N extends @PolyMustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> p0) $$ @MustCall CollectionTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>> $$ N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> replaceNode(@MustCall CollectionTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>> this, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> p0) $$ ( 7315, 7316 ) $$ Incompatible return type.
	public N replaceNode(N newNode) {
	       ^
  found   : N extends @PolyMustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>
  required: N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>
  Consequence: method in @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>, C extends @MustCall Collection<N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C>>>, C extends @MustCall Collection<N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>>>
    N extends @PolyMustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> replaceNode(@MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>, C extends @MustCall Collection<N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C>>> this, N extends @PolyMustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> p0)
  cannot override method in @MustCall CollectionTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>>
    N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> replaceNode(@MustCall CollectionTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>> this, N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> p0)
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/tree/core/AbstractGenericCollectionTreeNode.java:361: error: (argument) $$ 4 $$ newNode $$ AbstractGenericCollectionTreeNode.switchChildNodes $$ N extends @PolyMustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> $$ N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>> $$ ( 7803, 7810 ) $$ incompatible argument for parameter newNode of AbstractGenericCollectionTreeNode.switchChildNodes.
			getParentNode().switchChildNodes(internalGetThis(), newNode);
			                                                    ^
  found   : N extends @PolyMustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>
  required: N extends @MustCall AbstractGenericCollectionTreeNode<V extends @MustCall Object, N, C extends @MustCall Collection<N>>
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/tree/core/AbstractGenericMapTreeNode.java:130: error: (override.return) $$ 6 $$ N extends @PolyMustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>> $$ N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>> $$ @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>>, C extends @MustCall Collection<N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C>>>, C extends @MustCall Collection<N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>>>> $$ N extends @PolyMustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>> addChildNode(@MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>>, C extends @MustCall Collection<N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C>>> this, N extends @PolyMustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>> p0) $$ @MustCall CollectionTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>>> $$ N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>> addChildNode(@MustCall CollectionTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>>> this, N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>> p0) $$ ( 2795, 2796 ) $$ Incompatible return type.
	public N addChildNode(N node) {
	       ^
  found   : N extends @PolyMustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>>
  required: N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>>
  Consequence: method in @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>>, C extends @MustCall Collection<N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C>>>, C extends @MustCall Collection<N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>>>>
    N extends @PolyMustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>> addChildNode(@MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>>, C extends @MustCall Collection<N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C>>> this, N extends @PolyMustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>> p0)
  cannot override method in @MustCall CollectionTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>>>
    N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>> addChildNode(@MustCall CollectionTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>>> this, N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>> p0)
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/tree/core/AbstractGenericMapTreeNode.java:145: error: (argument) $$ 4 $$ added $$ AbstractGenericCollectionTreeNode.fireNodeAdded $$ N extends @PolyMustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>> $$ N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>> $$ ( 3218, 3222 ) $$ incompatible argument for parameter added of AbstractGenericCollectionTreeNode.fireNodeAdded.
			fireNodeAdded(node);
			              ^
  found   : N extends @PolyMustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>>
  required: N extends @MustCall AbstractGenericMapTreeNode<K extends @MustCall Object, V extends @MustCall Object, N, C extends @MustCall Collection<N>>
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/tree/core/AbstractGenericKeyListTreeNode.java:72: error: (override.return) $$ 6 $$ N extends @PolyMustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N> $$ N extends @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N> $$ @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N extends @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N extends @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N>>> $$ N extends @PolyMustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N> addChildNodeAt(@MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N extends @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N>> this, @MustCall int p0, N extends @PolyMustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N> p1) $$ @MustCall ListTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N>> $$ N extends @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N> addChildNodeAt(@MustCall ListTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N>> this, @MustCall int p0, N extends @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N> p1) $$ ( 2164, 2165 ) $$ Incompatible return type.
	public N addChildNodeAt(int index, N node) {
	       ^
  found   : N extends @PolyMustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N>
  required: N extends @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N>
  Consequence: method in @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N extends @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N extends @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N>>>
    N extends @PolyMustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N> addChildNodeAt(@MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N extends @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N>> this, @MustCall int p0, N extends @PolyMustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N> p1)
  cannot override method in @MustCall ListTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N>>
    N extends @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N> addChildNodeAt(@MustCall ListTreeNodeInterface<V extends @MustCall Object, N extends @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N>> this, @MustCall int p0, N extends @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N> p1)
../dataset/june2020_dataset/urld2fb1d2b05_thnaeff_Util_tgz-pJ8-ch_thn_util_tests_TreeTestJ8/src/ch/thn/util/tree/core/AbstractGenericKeyListTreeNode.java:101: error: (argument) $$ 4 $$ added $$ AbstractGenericCollectionTreeNode.fireNodeAdded $$ N extends @PolyMustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N> $$ N extends @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N> $$ ( 3068, 3072 ) $$ incompatible argument for parameter added of AbstractGenericCollectionTreeNode.fireNodeAdded.
		fireNodeAdded(node);
		              ^
  found   : N extends @PolyMustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N>
  required: N extends @MustCall AbstractGenericKeyListTreeNode<K extends @MustCall Object, V extends @MustCall Object, N>
24 errors
